public class DatabaseHelper extends SQLiteOpenHelper {

    public static final String DATABASE_NAME = "todos.db";
    public static final int DATABASE_VERSION = 1;

    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        String SQL_CREATE_TODOS_TABLE = "CREATE TABLE " + TodosContract.TodosEntry.TABLE_NAME + " ("
                + TodosContract.TodosEntry._ID + " INTEGER PRIMARY KEY AUTOINCREMENT, "
                + TodosContract.TodosEntry.COLUMN_NAME + " TEXT NOT NULL);";

        db.execSQL(SQL_CREATE_TODOS_TABLE);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        String SQL_DELETE_TODOS_TABLE = "DROP TABLE IF EXISTS " + TodosContract.TodosEntry.TABLE_NAME;
        db.execSQL(SQL_DELETE_TODOS_TABLE);
        onCreate(db);
    }
}

public class Todos {

    private int id;
    private String name;

    public Todos(int id, String name) {
        this.id = id;
        this.name = name;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}

public final class TodosContract {

    public TodosContract() {}

    public static abstract class TodosEntry implements BaseColumns {

        public static final String TABLE_NAME = "todos";
        public static final String COLUMN_NAME = "name";
    }
}
public long insertTodo(String name) {
    ContentValues values = new ContentValues();
    values.put(TodosContract.TodosEntry.COLUMN_NAME, name);
    SQLiteDatabase db = getWritableDatabase();
    long id = db.insert(TodosContract.TodosEntry.TABLE_NAME, null, values);
    db.close();
    return id;
}


public int updateTodo(int id, String name) {
    ContentValues values = new ContentValues();
    values.put(TodosContract.TodosEntry.COLUMN_NAME, name);
    String selection = TodosContract.TodosEntry._ID + "=?";
    String[] selectionArgs = { String.valueOf(id) };
    SQLiteDatabase db = getWritableDatabase();
    int count = db.update(TodosContract.TodosEntry.TABLE_NAME, values, selection, selectionArgs);
    db.close();
    return count;
}
public int deleteTodo(int id) {
    String selection = TodosContract.TodosEntry._ID + "=?";
    String[] selectionArgs = { String.valueOf(id) };
    SQLiteDatabase db = getWritableDatabase();
    int count = db.delete(TodosContract.
